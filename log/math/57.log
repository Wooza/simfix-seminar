=================================================
Project : math_57	start : 20/02/28 19:55
Current failed test : org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testSmallDistances | 20/02/28 19:55
Fri Feb 28 19:55:14 CET 2020 org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer,69
Fri Feb 28 19:55:15 CET 2020 Fri Feb 28 19:55:15 CET 2020 : org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer,70=>Find no block
Fri Feb 28 19:55:15 CET 2020 org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer,134
Fri Feb 28 19:56:49 CET 2020 org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer,175

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double sum=0;
for(int i=0;i<pointSet.size();i++){
 final T p=pointSet.get(i);
 final Cluster<T> nearest=getNearestCluster(resultSet,p);
 final double d=p.distanceFrom(nearest.getCenter());
sum+=d*d;
dx2[i]=sum;
}

Time : 20/02/28 19:57
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.494010984788007 : [/home/florian/reproduce//math/math_57_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java=>0,0]
checkVectorDimensions(v.getDimension());
boolean thisIsSmaller=entries.size()<v.entries.size();
Iterator iter=thisIsSmaller?entries.iterator():v.entries.iterator();
OpenIntToDoubleHashMap larger=thisIsSmaller?v.entries:entries;
double d=0;
while(iter.hasNext()){
iter.advance();
d+=iter.value()*larger.get(iter.key());
}
return d;

Time : 20/02/28 19:57
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/florian/reproduce//math/math_57_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java=>175,182]
int sum=0;
for(int i=0;i<pointSet.size();i++){
 final T p=pointSet.get(i);
 final Cluster<T> nearest=getNearestCluster(resultSet,p);
 final double d=p.distanceFrom(nearest.getCenter());
sum+=d*d;
dx2[i]=sum;
}

Time : 20/02/28 19:57
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/florian/reproduce//math/math_57_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java=>175,182]
double sum=0;
for(int i=0;i<pointSet.size();i++){
 final T p=pointSet.get(i);
 final Cluster<T> nearest=getNearestCluster(resultSet,p);
 final double d=p.distanceFrom(nearest.getCenter());
sum+=d*d;
dx2[i]=sum;
}

Time : 20/02/28 19:57
----------------------------------------
Success time : 20/02/28 19:57
