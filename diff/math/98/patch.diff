diff --git a/src/java/org/apache/commons/math/linear/BigMatrixImpl.java b/src/java/org/apache/commons/math/linear/BigMatrixImpl.java
index 7cd61cb..4843a93 100644
--- a/src/java/org/apache/commons/math/linear/BigMatrixImpl.java
+++ b/src/java/org/apache/commons/math/linear/BigMatrixImpl.java
@@ -986,9 +986,9 @@ public class BigMatrixImpl implements BigMatrix, Serializable {
         if (v.length != this.getColumnDimension()) {
             throw new IllegalArgumentException("vector has wrong length");
         }
-        final int nRows = this.getRowDimension();
-        final int nCols = this.getColumnDimension();
-        final BigDecimal[] out = new BigDecimal[v.length];
+ final int nRows=this.getRowDimension();
+ final int nCols=this.getColumnDimension();
+ final BigDecimal[] out=new BigDecimal[nRows];
         for (int row = 0; row < nRows; row++) {
             BigDecimal sum = ZERO;
             for (int i = 0; i < nCols; i++) {
diff --git a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java
index 7910644..b2321cb 100644
--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java
+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java
@@ -773,18 +773,18 @@ public class RealMatrixImpl implements RealMatrix, Serializable {
     public double[] operate(double[] v) throws IllegalArgumentException {
         final int nRows = this.getRowDimension();
         final int nCols = this.getColumnDimension();
-        if (v.length != nCols) {
-            throw new IllegalArgumentException("vector has wrong length");
-        }
-        final double[] out = new double[v.length];
-        for (int row = 0; row < nRows; row++) {
-            final double[] dataRow = data[row];
-            double sum = 0;
-            for (int i = 0; i < nCols; i++) {
-                sum += dataRow[i] * v[i];
-            }
-            out[row] = sum;
-        }
+if(v.length!=nCols){
+throw new IllegalArgumentException("vector has wrong length");
+}
+ final double[] out=new double[nRows];
+for(int row=0;row<nRows;row++){
+ final double[] dataRow=data[row];
+double sum=0;
+for(int i=0;i<nCols;i++){
+sum+=dataRow[i]*v[i];
+}
+out[row]=sum;
+}
         return out;
     }
 
